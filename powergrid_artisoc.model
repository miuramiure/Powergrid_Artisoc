//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 3.0;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space powergrid(0,0),Square_2D(150, 150, !Loop, North, 1, !Map_3D){
        AgtType area(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim dp(0, 0) As Double = (0.0);
            Dim k(0, 0) As Double = (0.0);
            Dim b(0, 0) As Double = (0.0);
            Dim p(0, 0) As Double = (0.0);
            Dim serial(0, 0) As Integer = (0);
            Dim trans_out_set(0, 0) As AgtSet = ();
            Dim trans_in_set(0, 0) As AgtSet = ();
            Dim e_new(0, 0) As Double = (0.0);
            Dim m(0, 0) As Double = (0.0);
            Dim e(0, 0) As Double = (0.0);
            Dim link(0, 0) As AgtSet = ();
            Dim members(0, 0) As AgtSet = ();
            Dim lamda(0, 0) As Double = (0.0);
            Dim lamda_next(0, 0) As Double = (0.0);
            Dim G_i(0, 0) As Double = (0.0);
        }
        AgtType transmitter(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim from_player(0, 0) As Agt = (0);
            Dim to_player(0, 0) As Agt = (0);
            Dim p(0, 0) As Double = (0.0);
            Dim f(0, 0) As Double = (0.0);
            Dim b(0, 0) As Double = (0.0);
            Dim k(0, 0) As Double = (0.0);
            Dim dp(0, 0) As Double = (0.0);
            Dim x_i(0, 0) As Double = (0.0);
            Dim x_i_next(0, 0) As Double = (0.0);
            Dim C1(0, 0) As Double = (0.0);
            Dim C2(0, 0) As Double = (0.0);
            Dim C3(0, 0) As Double = (0.0);
            Dim C4(0, 0) As Double = (0.0);
            Dim D1(0, 0) As Double = (0.0);
            Dim D2(0, 0) As Double = (0.0);
            Dim D3(0, 0) As Double = (0.0);
            Dim D4(0, 0) As Double = (0.0);
            Dim U(0, 0) As Double = (0.0);
            Dim dU(0, 0) As Double = (0.0);
            Dim dG(0, 0) As Integer = (0);
        }
        AgtType home(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim link(0, 0) As AgtSet = ();
            Dim e(0, 0) As Double = (0.0);
            Dim m(0, 0) As Double = (0.0);
            Dim e_new(0, 0) As Double = (0.0);
            Dim trans_in_set(0, 0) As AgtSet = ();
            Dim trans_out_set(0, 0) As AgtSet = ();
            Dim serial(0, 0) As Integer = (0);
            Dim p(0, 0) As Double = (0.0);
            Dim b(0, 0) As Double = (0.0);
            Dim k(0, 0) As Double = (0.0);
            Dim dp(0, 0) As Double = (0.0);
            Dim x_i(0, 0) As Double = (0.0);
            Dim x_i_next(0, 0) As Double = (0.0);
            Dim C1(0, 0) As Double = (0.0);
            Dim C2(0, 0) As Double = (0.0);
            Dim C3(0, 0) As Double = (0.0);
            Dim C4(0, 0) As Double = (0.0);
            Dim D1(0, 0) As Double = (0.0);
            Dim D2(0, 0) As Double = (0.0);
            Dim D3(0, 0) As Double = (0.0);
            Dim D4(0, 0) As Double = (0.0);
            Dim U(0, 0) As Double = (0.0);
            Dim dU(0, 0) As Double = (0.0);
            Dim dG(0, 0) As Integer = (0);
            Dim area(0, 0) As Agt = (0);
        }
        AgtType solar(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim link(0, 0) As AgtSet = ();
            Dim e(0, 0) As Double = (0.0);
            Dim m(0, 0) As Double = (0.0);
            Dim e_new(0, 0) As Double = (0.0);
            Dim trans_in_set(0, 0) As AgtSet = ();
            Dim trans_out_set(0, 0) As AgtSet = ();
            Dim serial(0, 0) As Integer = (0);
            Dim p(0, 0) As Double = (0.0);
            Dim b(0, 0) As Double = (0.0);
            Dim k(0, 0) As Double = (0.0);
            Dim dp(0, 0) As Double = (0.0);
            Dim x_i(0, 0) As Double = (0.0);
            Dim x_i_next(0, 0) As Double = (0.0);
            Dim C1(0, 0) As Double = (0.0);
            Dim C2(0, 0) As Double = (0.0);
            Dim C3(0, 0) As Double = (0.0);
            Dim C4(0, 0) As Double = (0.0);
            Dim D1(0, 0) As Double = (0.0);
            Dim D2(0, 0) As Double = (0.0);
            Dim D3(0, 0) As Double = (0.0);
            Dim D4(0, 0) As Double = (0.0);
            Dim U(0, 0) As Double = (0.0);
            Dim dU(0, 0) As Double = (0.0);
            Dim dG(0, 0) As Integer = (0);
            Dim area(0, 0) As Agt = (0);
        }
    }
    Dim alpha(0, 0) As Double = (0.0);
    Dim beta(0, 0) As Double = (0.0);
    Dim link_range(0, 0) As Double = (0.0);
    Dim k_p(0, 0) As Double = (0.0);
    Dim time_min(0, 0) As Integer = (0);
    Dim time_hour(0, 0) As Integer = (0);
    Dim time_day(0, 0) As Integer = (0);
    Dim e_total(0, 0) As Double = (0.0);
    Dim count(0, 0) As Integer = (0);
    Dim const(0, 0) As Double = (0.0);
    Dim home_num(0, 0) As Integer = (0);
    Dim solar_num(0, 0) As Integer = (0);
    Dim area_num(0, 0) As Integer = (0);
    Dim F(0, 0) As Double = (0.0);
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.ALPHA = 1(0.03);
    UNIVERSE.BETA = 1(0.04);
    UNIVERSE.LINK_RANGE = 1(50.0);
    UNIVERSE.K_P = 1(0.2);
    UNIVERSE.COUNT = 1(0);
    UNIVERSE.CONST = 1(0.3);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
include "lib_miura.inc" //基礎的な独自関数をインポート

Univ_Init{

ClearConsoleScreen() //コンソールをクリア

//-------------------------------------------------------
//変数の宣言
//-------------------------------------------------------

//空間に関する変数
Dim width as Integer //空間の幅(x)
Dim height as Integer //空間の高さ(y)

//エージェントに関する変数
Dim area_set as AgtSet //areaエージェントセット

//インクリメント変数, 一時格納変数
Dim i as Integer
Dim one as Agt
Dim temp_agtset as AgtSet


//-------------------------------------------------------
//パラメータの設定＆事前処理
//-------------------------------------------------------

//エージェントの数
Universe.area_num=20 //areaエージェントの数
Universe.home_num=50 //homeエージェントの最大数
Universe.solar_num=50 //solarエージェントの最大数

//空間のサイズを取得
width=GetWidthSpace(Universe.powergrid) //空間の幅(x)
height=GetHeightSpace(Universe.powergrid) //空間の高さ(y)


//-------------------------------------------------------
//エージェントの生成と配置
//-------------------------------------------------------

//areaエージェントの生成と配置
For i=0 to Universe.area_num
	CreateAgt(Universe.powergrid.area) 
next i
MakeAgtSet(area_set, Universe.powergrid.area)
RandomPutAgtset(area_set)

}


Univ_Step_Begin{

//-------------------------------------------------------
//変数の宣言
//-------------------------------------------------------

//地域の中のmembers配置に用いる変数
Dim r_max as Double
Dim r as Double
Dim theta as Double

//インクリメント変数, 一時格納変数
Dim i as Integer
Dim one as Agt
Dim one2 as Agt
Dim temp_agt as Agt
Dim num_temp as Integer
Dim link_agtset as AgtSet  


//-------------------------------------------------------
//パラメータの設定＆事前処理
//-------------------------------------------------------

r_max=10  //地域の中に需要供給エージェントを配置するときの範囲（地域中心から半径r_max以内）


//-------------------------------------------------------
//エージェントの生成と配置
//-------------------------------------------------------
//エージェントの生成と配置は初回ステップのみ実行する
if Universe.count== 0 Then
	
	//地域エージェント間にリンク(送電線)を生成する
	MakeAgtSet(link_agtset, Universe.powergrid.area)
	
	//linkエージェントにserialを付与する(serial=1,2,...)
	i=1 //インクリメント変数の初期化
	For each one in link_agtset
		one.serial=i
		i=i+1
	next one
	
	//送電線を引く(送電線を引く相手をそれぞれのlinkエージェントセットに格納する)
	For each one in link_agtset
		ClearAgtset (one.link) 
		MakeOneAgtSetAroundPosition(one.link,  Universe.powergrid, one.X, one.Y, one.Layer, Universe.link_range, Universe.powergrid.area) //自分のまわりの視野内にいるエージェント取得
		DelAgtSet2(one.link, one) //linkから自分自身を削除
	next one
	
	//link関係の間にtransエージェントを生成してtrans_inまたはtrans_outに格納
	//serialが大きいほうから小さいほうへ流れがあるときを正とする
	//-----serialが小さい相手との間の送電エージェントはtrans_out_setに格納
	//-----serialが大きい相手との間の送電エージェントはtrans_in_setに格納
	For each one in link_agtset //linkエージェントそれぞれに(one)
		For each one2 in one.link //各linkエージェントのlink相手それぞれに(one2)
			if one.serial>one2.serial then //Serialが大きいほうから小さい方に向けて処理をすれば十分（２回処理する必要はない）
				temp_agt=CreateAgt(Universe.powergrid.transmitter) //送電エージェントを生成
				AddAgt(one.trans_out_set, temp_agt) //送電エージェントをserialが大きい方のエージェント(one)のtrans_out_setに格納
				AddAgt(one2.trans_in_set, temp_agt) //送電エージェントをserialが小さい方のエージェント(one)のtrans_in_setに格納
				temp_agt.from_player=one //送電エージェントから見て上流側の地域をfrom_playerに格納
				temp_agt.to_player=one2  //送電エージェントから見て下流側の地域をto_playerに格納
				//送電エージェントを配置．ただし空間出力には表示しない(送電線のみ表示)
				temp_agt.X=(one.X+one2.X)/2
				temp_agt.Y=(one.Y+one2.Y)/2
			end if
		next one2
	next one
	
	//各地域エージェントのmembersにhomeやsolarを追加
	For each one in link_agtset //各地域ごとに
		ClearAgtset (one.members) //membersを初期化
		
		//homeエージェントの配置
		num_temp=CInt(Universe.home_num*Rnd()) //homeエージェント数をランダムで決定
		For i=1 to num_temp
			temp_agt =CreateAgt(Universe.powergrid.home) 
			r=r_max*Rnd()
			theta=2*PI()*Rnd()
			temp_agt.X=one.X+r*cos(theta)
			temp_agt.Y=one.Y+r*sin(theta)
			AddAgt(one.members, temp_agt)
			temp_agt.area=one
		next i
		
		//solarエージェントの配置
		num_temp=CInt(Universe.solar_num*Rnd()) //solarエージェント数をランダムで決定
		For i=1 to num_temp
			temp_agt =CreateAgt(Universe.powergrid.solar) 
			r=r_max*Rnd()
			theta=2*PI()*Rnd()
			temp_agt.X=one.X+r*cos(theta)
			temp_agt.Y=one.Y+r*sin(theta)
			AddAgt(one.members, temp_agt)
			temp_agt.area=one
		next i
	next one
	
End if


}



Univ_Step_End{
//-------------------------------------------------------
//変数の宣言
//-------------------------------------------------------
Dim temp_agtset as AgtSet
Dim area_agtset as AgtSet
Dim player_agtset as AgtSet
Dim count_min as Integer

//-------------------------------------------------------
//パラメータの設定＆事前処理
//-------------------------------------------------------
count_min=Universe.count*1 //離散時間を調整

ClearAgtset (area_agtset)
ClearAgtset(player_agtset)
ClearAgtset (temp_agtset)

//全ての地域を取得
MakeAgtSet(area_agtset , Universe.powergrid.area)

//全てのプレイヤーを取得
MakeAgtSet(player_agtset, Universe.powergrid.home) //homeを追加
MakeAgtSet(temp_agtset, Universe.powergrid.solar)
JoinAgtSet(player_agtset, temp_agtset) //solarを追加
MakeAgtSet(temp_agtset, Universe.powergrid.transmitter)
JoinAgtSet(player_agtset, temp_agtset) //transを追加
PurifyAgtSet(player_agtset, player_agtset) //重複を削除

//-------------------------------------------------------
//状態量の更新
//-------------------------------------------------------
//停滞量の総量を更新
Universe.e_total=0
For each one in area_agtset
	Universe.e_total=Universe.e_total+one.G_i
next one

//目的関数を更新
Universe.F=0
For each one in player_agtset
	Universe.F=Universe.F+one.U
next one

//ラムダを更新
For each one in area_agtset
	one.lamda=one.lamda_next
next one

//x_iを更新
For each one in player_agtset
	one.x_i=one.x_i_next
next one

//-------------------------------------------------------
//時間の更新
//-------------------------------------------------------
Universe.count=Universe.count+1
Universe.time_min=count_min mod 60
Universe.time_day=count_min \ 1440
Universe.time_hour=(count_min mod 1440) \ 60

}




Univ_Finish{

}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.POWERGRID.AREA
Agt_Init{
My.lamda=0
My.lamda_next=0
My.G_i=0
}

Agt_Step{
Dim one as Agt

My.G_i=0
For each one in My.members
	My.G_i=My.G_i+one.dG*one.x_i
next one
For each one in My.trans_out_set
	My.G_i=My.G_i-one.x_i
next one
For each one in My.trans_in_set
	My.G_i=My.G_i+one.x_i
next one

if Universe.time_min == 50 then
	My.lamda_next= My.lamda+ Universe.beta * My.G_i
end if

My.p=My.lamda

}
#end_rule UNIVERSE.POWERGRID.AREA




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.POWERGRID.TRANSMITTER
Agt_Init{
My.C1=0.5
My.C2=1.0
My.C3=1.0
//My.C4=0.2
//My.D1=1.0
//My.D2=0.5
//My.D3=1.0
//dG=-1
}

Agt_Step{

//U, dUの計算
if -My.C1<=My.x_i And My.x_i<My.C1 then
	My.U=My.C2
	My.dU=0
Else
	if My.x_i< -My.C1 then
		My.U=-My.C3*(My.x_i+My.C1)^2+My.C2
		My.dU=-2*My.C3*(My.x_i+My.C1)
	else
		My.U=-My.C3*(My.x_i-My.C1)^2+My.C2
		My.dU=-2*My.C3*(My.x_i-My.C1)
	end if
end if

My.x_i_next=My.x_i - Universe.alpha * (-My.dU - My.from_player.lamda+My.to_player.lamda )

}
#end_rule UNIVERSE.POWERGRID.TRANSMITTER




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.POWERGRID.HOME
Agt_Init{
My.C1=0.5
My.C2=1.0
My.C3=1.0
My.C4=0.2
//My.D1=1.0
//My.D2=0.5
//My.D3=1.0
My.dG=-1
}

Agt_Step{
//時変パラメータC1の値を計算する

//U, dUの計算
if My.x_i<My.C1 then
	My.U=-My.C3*(My.x_i-My.C1)^2+My.C2
	My.dU=-2*My.C3*(My.x_i-My.C1)
Else
	My.U=-My.C4*(My.x_i-My.C1)^2+My.C2
	My.dU=-2*My.C4*(My.x_i-My.C1)
end if

My.x_i_next=My.x_i - Universe.alpha * (-My.dU + My.dG * My.area.lamda )

}
#end_rule UNIVERSE.POWERGRID.HOME




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.POWERGRID.SOLAR
Agt_Init{
My.C1=0.8
My.C2=1.0
My.C3=0.2
My.C4=1.0
//My.D1=1.0
//My.D2=0.5
//My.D3=1.0
My.dG=1
}

Agt_Step{
//U, dUの計算
if My.x_i<My.C1 then
	My.U=-My.C3*(My.x_i-My.C1)^2+My.C2
	My.dU=-2*My.C3*(My.x_i-My.C1)
Else
	My.U=-My.C4*(My.x_i-My.C1)^2+My.C2
	My.dU=-2*My.C4*(My.x_i-My.C1)
end if

My.x_i_next=My.x_i - Universe.alpha * (-My.dU + My.dG * My.area.lamda )

}
#end_rule UNIVERSE.POWERGRID.SOLAR




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 50;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.powergrid";
    Map_Name = "powergrid";
    Title = "powergrid";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = -43;
    Position_y = 21;
    Size_x = 1044;
    Size_y = 800;
    Remarks = Yes;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 150, 150;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "需要家(一般家庭)";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.powergrid.home";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 255,0,0;
        Marker_Id = -1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "image_home.png";
        Num_Display = No;
        Num_Var_Name = "Universe.powergrid.home.ID";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 0.1;
        Agent_Image_Magnify_Variable_Name = "Universe.powergrid.home.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.powergrid.home.ID";
    }
    Output {
        Map_Element_Name = "発電家(太陽光発電)";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.powergrid.solar";
        Draw_Line = Yes;
        Collection_Name = "Universe.powergrid.solar.link";
        Line_Type = 1;
        Line_Arrow = 1;
        Line_Width = 1;
        Line_Color = 0, 0, 255;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 0,0,255;
        Marker_Id = -1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "image_solar.png";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 0.1;
        Agent_Image_Magnify_Variable_Name = "Universe.powergrid.solar.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.powergrid.solar.ID";
    }
    Output {
        Map_Element_Name = "地域";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.powergrid.area";
        Draw_Line = Yes;
        Collection_Name = "Universe.powergrid.area.link";
        Line_Type = 1;
        Line_Arrow = 1;
        Line_Width = 1;
        Line_Color = 0, 0, 255;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 255,204,153;
        Marker_Id = -1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "image_area.png";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 0.5;
        Agent_Image_Magnify_Variable_Name = "Universe.powergrid.area.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.powergrid.area.ID";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "合計停滞量";
    Title = "合計停滞量";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = Yes;
    Position_x = 90;
    Position_y = 190;
    Size_x = 985;
    Size_y = 344;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "合計停滞量";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 1;
        Output_Expression = "Universe.e_total";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "価格";
    Title = "価格";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 98;
    Position_y = -2;
    Size_x = 846;
    Size_y = 223;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "地域1";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(1).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
    Output {
        Graph_Element_Name = "地域2";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(2).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (51, 102, 255);
    }
    Output {
        Graph_Element_Name = "地域3";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(3).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 51, 153);
    }
    Output {
        Graph_Element_Name = "地域4";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(4).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 0, 51);
    }
    Output {
        Graph_Element_Name = "地域5";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(5).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (204, 255, 0);
    }
    Output {
        Graph_Element_Name = "地域6";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(6).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 0, 102);
    }
    Output {
        Graph_Element_Name = "地域7";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(7).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (102, 0, 102);
    }
    Output {
        Graph_Element_Name = "地域8";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(8).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (51, 0, 51);
    }
    Output {
        Graph_Element_Name = "地域9";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(9).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 153, 153);
    }
    Output {
        Graph_Element_Name = "地域0";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.area(0).p";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 153, 255);
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "需要供給量";
    Title = "需要供給量";
    Disable = Yes;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 57;
    Position_y = 370;
    Size_x = 500;
    Size_y = 300;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "home1";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(1).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
    Output {
        Graph_Element_Name = "home2";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(2).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (51, 102, 255);
    }
    Output {
        Graph_Element_Name = "home3";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(3).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 51, 153);
    }
    Output {
        Graph_Element_Name = "home4";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(4).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 0, 51);
    }
    Output {
        Graph_Element_Name = "home5";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(5).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (204, 255, 0);
    }
    Output {
        Graph_Element_Name = "home6";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(6).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 0, 102);
    }
    Output {
        Graph_Element_Name = "home7";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(7).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (102, 0, 102);
    }
    Output {
        Graph_Element_Name = "home8";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(8).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (51, 0, 51);
    }
    Output {
        Graph_Element_Name = "home9";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(9).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 153, 153);
    }
    Output {
        Graph_Element_Name = "home0";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.powergrid.home(0).x_i";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 153, 255);
    }
}


//-------------------------------------------------------
// Numeric Data Window Output Definition Division
//-------------------------------------------------------
Numeric_Output {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Position_x = 846;
    Position_y = 0;
    Size_x = 846;
    Size_y = 223;
    Numeric_Name = "time";
    Title = "time";
    Disable = No;
    Output_Group_Name = "";
    OUTPUT {
        Output_Element_Name = "日";
        Figures = 0;
        Format_Id = 0;
        Output_Expression = "Universe.time_day";
    }
    OUTPUT {
        Output_Element_Name = "時";
        Figures = 0;
        Format_Id = 0;
        Output_Expression = "Universe.time_hour";
    }
    OUTPUT {
        Output_Element_Name = "分";
        Figures = 0;
        Format_Id = 0;
        Output_Expression = "Universe.time_min";
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "目的関数";
    Title = "目的関数";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = No;
    Position_x = 106;
    Position_y = 418;
    Size_x = 846;
    Size_y = 444;
    Axis_Label = "", "";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "F";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "Universe.F";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 0, 255);
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 885, 626, 159, 274;
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "リンクレンジ";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.link_range";
        Text_Data = "50.0";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "α";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.alpha";
        Text_Data = "0.03";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "β";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.beta";
        Text_Data = "0.04";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 75;
    Debug_Position_y = 75;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 58;
    Console_Position_y = 656;
    Console_Size_x = 600;
    Console_Size_y = 120;
    Componen_Tree_Position_x = 0;
    Componen_Tree_Position_y = 446;
    Componen_Tree_Size_x = 846;
    Componen_Tree_Size_y = 223;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, 0, 0, 1219, 866;
    Window_Name = Output_Setting_Window, 607, 286, 480, 290;
    Window_Name = Artisoc_Help_Window, 575, 41, 1094, 542;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}
